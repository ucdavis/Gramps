<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RB_Decission_Approved" xml:space="preserve">
    <value>Approved</value>
    <comment>RadioButton</comment>
  </data>
  <data name="Class_indexedControl" xml:space="preserve">
    <value>indexedControl</value>
    <comment>CSS Class used to find controls that need to be indexed for an array</comment>
  </data>
  <data name="RB_Decission_Denied" xml:space="preserve">
    <value>Denied</value>
    <comment>RadioButton</comment>
  </data>
  <data name="EmailAutomatedDisclaimer" xml:space="preserve">
    <value>Please do not reply to this email. It was automatically generated.</value>
    <comment>Text to go at the botom of the emails sent out.</comment>
  </data>
  <data name="EmailCreateProposal" xml:space="preserve">
    <value>Create a new proposal:</value>
  </data>
  <data name="InitialCall" xml:space="preserve">
    <value>Email sent out to list for proposals</value>
  </data>
  <data name="RB_Decission_NotDecided" xml:space="preserve">
    <value>NotDecided</value>
    <comment>RadioButton</comment>
  </data>
  <data name="ProposalApproved" xml:space="preserve">
    <value>Email sent out to applicant if proposal is approved</value>
  </data>
  <data name="ProposalConfirmation" xml:space="preserve">
    <value>Email sent out to applicant to confirm proposal has been created</value>
  </data>
  <data name="ProposalDenied" xml:space="preserve">
    <value>Email sent out to applicant to notify them that their proposal has not been accepted</value>
  </data>
  <data name="ProposalUnsubmitted" xml:space="preserve">
    <value>Email sent to applicant to inform them their proposal has been set back to edit</value>
  </data>
  <data name="RB_Notified_Notified" xml:space="preserve">
    <value>Notified</value>
    <comment>Radio Button</comment>
  </data>
  <data name="RB_Notified_NotNotified" xml:space="preserve">
    <value>NotNotified</value>
    <comment>Radio Button</comment>
  </data>
  <data name="ReadyForReview" xml:space="preserve">
    <value>Email sent out to list of reviewers to notify them that the proposals are ready to be reviewed</value>
  </data>
  <data name="ReminderCallIsAboutToClose" xml:space="preserve">
    <value>Email sent out to list applicants that have not finilized their proposals</value>
    <comment>Maybe include the list of emails for call?</comment>
  </data>
  <data name="TokenApprovedAmount" xml:space="preserve">
    <value>ApprovedAmount</value>
    <comment>Approved email</comment>
  </data>
  <data name="TokenCloseDate" xml:space="preserve">
    <value>CloseDate</value>
    <comment>Initial Call </comment>
  </data>
  <data name="TokenProposalLink" xml:space="preserve">
    <value>ProposalLink</value>
    <comment>Approved/Denied email</comment>
  </data>
  <data name="TokenProposalMaximum" xml:space="preserve">
    <value>ProposalMaximum</value>
    <comment>Initial Call</comment>
  </data>
  <data name="TokenReviewerName" xml:space="preserve">
    <value>ReviewerName</value>
    <comment>Ready For Review</comment>
  </data>
  <data name="VersionKey" xml:space="preserve">
    <value>VersionKey</value>
  </data>
  <data name="RB_Submitted_NotSubmitted" xml:space="preserve">
    <value>NotSubmitted</value>
    <comment>RadioButton</comment>
  </data>
  <data name="RB_Submitted_Submitted" xml:space="preserve">
    <value>Submitted</value>
    <comment>RadioButton</comment>
  </data>
  <data name="RB_Warned_NotWarned" xml:space="preserve">
    <value>NotWarned</value>
    <comment>RadioButton</comment>
  </data>
  <data name="RB_Warned_Warned" xml:space="preserve">
    <value>Warned</value>
    <comment>RadioButton</comment>
  </data>
  <data name="RB_SaveOptions_SaveNoValidate" xml:space="preserve">
    <value>SaveWithoutValidation</value>
    <comment>RadioButton</comment>
  </data>
  <data name="RB_SaveOptions_SaveWithValidation" xml:space="preserve">
    <value>SaveAndValidate</value>
    <comment>RadioButton</comment>
  </data>
  <data name="RB_SaveOptions_SubmitFinal" xml:space="preserve">
    <value>SubmitFinal</value>
    <comment>RadioButton</comment>
  </data>
  <data name="Report_Submitted" xml:space="preserve">
    <value>Submitted</value>
    <comment>Report Column Choice -- Currently Not Used</comment>
  </data>
  <data name="Report_Approved" xml:space="preserve">
    <value>Approved</value>
    <comment>Report Column Choice</comment>
  </data>
  <data name="Report_Sequence" xml:space="preserve">
    <value>ProposalSequence</value>
    <comment>Report Column Choice</comment>
  </data>
  <data name="Report_AwardedAmount" xml:space="preserve">
    <value>AwardAmount</value>
    <comment>Report Column Choice</comment>
  </data>
  <data name="Report_Comments" xml:space="preserve">
    <value>Comments</value>
    <comment>Report Column Choice</comment>
  </data>
  <data name="Report_Denied" xml:space="preserve">
    <value>Denied</value>
    <comment>Report Column Choice</comment>
  </data>
  <data name="Report_Investigators" xml:space="preserve">
    <value>Investigators</value>
    <comment>Report Column Choice</comment>
  </data>
  <data name="Report_RequestedAmount" xml:space="preserve">
    <value>AmountRequested</value>
    <comment>Report Column Choice</comment>
  </data>
  <data name="Filter_Active" xml:space="preserve">
    <value>Active</value>
    <comment>View Filter</comment>
  </data>
  <data name="Filter_Not_Active" xml:space="preserve">
    <value>InActive</value>
    <comment>View Filter</comment>
  </data>
  <data name="Message_NoAccess" xml:space="preserve">
    <value>You do not have access to {0}.</value>
  </data>
  <data name="Message_CreatedSuccessfully" xml:space="preserve">
    <value>{0} Created Successfully.</value>
  </data>
  <data name="Message_ProblemSelecting" xml:space="preserve">
    <value>There was a problem selecting {0}.</value>
  </data>
  <data name="Message_EditedSuccessfully" xml:space="preserve">
    <value>{0} Edited Successfully.</value>
  </data>
  <data name="TokenCreateProposalLink" xml:space="preserve">
    <value>CreateProposalLink</value>
    <comment>Initial Call</comment>
  </data>
  <data name="Message_UnableToAdd" xml:space="preserve">
    <value>Unable to add {0}</value>
  </data>
  <data name="Message_NotFound" xml:space="preserve">
    <value>{0} not found.</value>
  </data>
  <data name="Message_RemovedSuccessfully" xml:space="preserve">
    <value>{0} Removed Successfully.</value>
  </data>
  <data name="Message_NotCreated" xml:space="preserve">
    <value>{0} not created.</value>
  </data>
  <data name="ModelError_AlreadyExists" xml:space="preserve">
    <value>{0} already exists</value>
  </data>
  <data name="Message_ProposalNotActive" xml:space="preserve">
    <value>Call For Proposal is not active or end date has passed. {0}.</value>
    <comment>{0} -  Cannot add investigator</comment>
  </data>
  <data name="Message_ProposalSubmitted" xml:space="preserve">
    <value>Cannot {0} {1} once submitted.</value>
    <comment>{0} - action, {1} entity</comment>
  </data>
</root>